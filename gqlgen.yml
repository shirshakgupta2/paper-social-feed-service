# Where are all the schema files located?
schema:
  - graphqlservice/graph/*.graphqls

# Where should the generated server code go?
exec:
  filename: graphqlservice/graph/generated/generated.go
  package: generated

# Where should any generated models go?
model:
  filename: graphqlservice/graph/model/models_gen.go
  package: model

# Where should the resolver implementations go?
resolver:
  layout: follow-schema
  dir: graphqlservice/graph
  package: graph
  filename_template: "{name}.resolvers.go"

# Enable JSON struct tags for all fields
struct_tag: json

# Optional: turn on to use []Thing instead of []*Thing
# omit_slice_element_pointers: false

# Optional: turn off to make struct-type struct fields not use pointers
# e.g. type Thing struct { FieldA OtherThing } instead of { FieldA *OtherThing }
# struct_fields_always_pointers: true

# Optional: turn off to make resolvers return values instead of pointers for structs
# resolvers_always_return_pointers: true

# Optional: set to speed up generation time by not performing a final validation pass.
# skip_validation: true

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.
autobind:
  - "github.com/paper-social/feed-service/graphqlservice/graph/model"

# This section declares type mapping between the GraphQL and go type systems
#
# The first line in each type will be used as defaults for resolver arguments and
# modelgen, the others will be allowed when binding to fields. Configure them to
# your liking
models:
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.ID
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
  String:
    model:
      - github.com/99designs/gqlgen/graphql.String
  Boolean:
    model:
      - github.com/99designs/gqlgen/graphql.Boolean
  Post:
    model: github.com/paper-social/feed-service/graphqlservice/graph/model.Post
    fields:
      id:
        resolver: false
      userId: 
        resolver: false
      content:
        resolver: false
      createdAt:
        resolver: false
      imageUrls:
        resolver: true 